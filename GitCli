#!/usr/bin/env bash 


usage()
{
cat <<- EOF
    Github Manager with Github-CLI
    Command Format : GitRepo <command> <option(s)>
    GitRepo: [-h|--help] [-c|--create] [-l|--list] [-i|--info] [-d|--delete] [-f|--fuzzy] [-s|--search]
EOF
}

createRepo()
{
  echo "##########################################################"
  echo "Github Repositories creator "
  echo "##########################################################"
  read -r "Enter Repository name : " name
  read -r "private or public (default:private) : " status
  read -r "Enter Repository description (Press Enter to leave Empty) : " description
  read -r "Do you want to clone the Repository in your current directory (y/n) : " clone

  if [ -z "$name" ];then
    echo "Must Provide Repository name!"
  else
    if [ -z "$status" ] || [ "$status" == "private" ];then
      case $clone in
        ([yY]|[yY]|[eE]|[sS])
          gh repo create "$name" --private --clone -d "$description"
          ;;
        ([nN]|[nN]|[oO])
          gh repo create "$name" --private  -d "$description"
          ;;
      esac
    elif [ "$status" == "public" ];then
      gh repo create "$name" "--${status}" -d "$description"
    else
      echo "Invalid Input"
    fi
  fi

}
deleteRepo()
{
  listRepo
  read -r "Enter Repository Name to delete : " name
  gh repo delete "$name"
}
fuzzyDiff()
{
  fzf_options=( 
    --reverse                                                                  
    --ansi                                                                     
    --prompt='[Commit] > '                                                     
    --bind="ctrl-u:preview-page-up"                                            
    --bind="ctrl-d:preview-page-down"                                          
    --bind="ctrl-k:preview-up"                                                 
    --bind="ctrl-j:preview-down"                                               
    --preview="echo {} | cut -d ' ' -f 1 | xargs -I % sh -c 'git show %'"      
    --preview-window='down:75%'
  )
  git log --oneline "$@" | fzf "${fzf_options[@]}"
}
help_message()
{
cat << EOF
  ##########################################################
  Available Options For Script.
      -i --info       Display Infos about Repositories
      -h --help       Display Description And Options For this Script
      -l --list       List Repositories Linked to account
      -c --create     Create Repository and Clone it to current path
      -f --fuzzy      Fuzzy search for diff in current repo
      -d --delete     List Repositories Linked to account
      -s --search     Search and Output Informations about a Repository
  ##########################################################
EOF
}
listRepo()
{
  echo "#################################"
  gh repo list
  echo "#################################"
}
 searchRepo()
{
  read -r "Enter Repository name to search :" name
  gh search repos "$name"
}
statusInfo()
{
  echo "#################################"
  gh status
  echo "#################################"

}

if [ "$#" -eq 0 ];then
  usage
  exit 1
else
  case $1 in
    -c|--create)
      createRepo
      ;;
    -d|--delete)
      deleteRepo
      ;;
    -h|--help)
      help_message
      ;;
    -i|--info)
      statusInfo
      ;;
    -f|--fuzzy)
      fuzzyDiff
      ;;
    -l|--list)
      listRepo
      ;;
    -s|--search)
      searchRepo
      ;;
    *)
      usage
      ;;
  esac
fi
